//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WsReservaWebTisal
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WsReservaWebTisal.ServicioReservaHoraWebSoap")]
    public interface ServicioReservaHoraWebSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_MantUsuario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_MantUsuarioAsync(
                    long Cod_Empresa, 
                    long Cod_Sucursal, 
                    string Tipo_Usuario, 
                    long Id_Ambulatorio, 
                    long Rut_Paciente, 
                    string Dv_Paciente, 
                    string Nombre_Paciente, 
                    string Apepat_Paciente, 
                    string Apemat_Paciente, 
                    string Fechanac_Paciente, 
                    string Direccion_Paciente, 
                    int Comuna_Paciente, 
                    int Distrito_Paciente, 
                    int Cod_Ciudad, 
                    string Ciudad_Paciente, 
                    int Localidad_Paciente, 
                    string Fono1_Paciente, 
                    string Fono2_Paciente, 
                    string Email_Paciente, 
                    string Sexo_Paciente, 
                    string EstadoCivil_Paciente, 
                    int Prevision_Paciente, 
                    string Clave_Usuario, 
                    string Pregunta_Clave, 
                    string RespuestaClave, 
                    string Estado, 
                    string Accion, 
                    string IP_Cliente, 
                    string Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_BuscaPacXRut", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_BuscaPacXRutAsync(int Cod_Empresa, int Cod_Sucursal, int Rut_Paciente, string Dv_Paciente, string Logeado, string Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_BuscaPacienteTitular", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_BuscaPacienteTitularAsync(int Cod_Empresa, int Cod_Sucursal, long Rut_Paciente, string Dv_Paciente, string Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_BuscaCargaPorID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_BuscaCargaPorIDAsync(int Cod_Empresa, long Id_Carga, long Id_GrupoFamiliar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_ValidaRutEnSistema", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_ValidaRutEnSistemaAsync(int Cod_Empresa, int Cod_Sucursal, long Rut_Paciente, string Dv_Paciente, string Fecha_NacPac, string TitularCarga);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_NormalizacionPacientes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_NormalizacionPacientesAsync(int Cod_Empresa, int Cod_Sucursal, long Rut_Paciente, string Dv_Paciente, string Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_LogeoPaciente", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_LogeoPacienteAsync(int Cod_Empresa, int Cod_Sucursal, int Rut_PacienteTitular, string Dv_PacienteTitular, string IP_Cliente, string Clave_Paciente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_BuscaCargas", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_BuscaCargasAsync(int Cod_Empresa, long Id_GrupoFamiliar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_ObtenerEspecialidades", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_ObtenerEspecialidadesAsync(int Cod_Empresa, int Cod_Sucursal, string Vigencia, string Internet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_ObtenerAgendaEspecialidad", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_ObtenerAgendaEspecialidadAsync(int Cod_Empresa, int Cod_Sucursal, int Cod_Especialidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_ObtenerAgendaXApellido", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_ObtenerAgendaXApellidoAsync(int Cod_Empresa, int Cod_Sucursal, string ApelPat_prof);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_ObtenerAgendaMedico", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_ObtenerAgendaMedicoAsync(int Cod_Empresa, int Cod_Sucursal, string ApelPat_prof, int Cod_Isapre, string Internet, int Cod_Especialidad, long Cod_Profesional, long Rut_Profesional);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_ObtenerAgendaEspecialidadIsapre", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_ObtenerAgendaEspecialidadIsapreAsync(int Cod_Empresa, int Cod_Sucursal, int Cod_Especialidad, int Cod_Isapre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_ObtenerAgendaEspecialidad_R_internet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_ObtenerAgendaEspecialidad_R_internetAsync(int Cod_Empresa, int Cod_Especialidad_internet, char Vigencia, char Internet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_ObtenerAgendaMedicoIsapre", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_ObtenerAgendaMedicoIsapreAsync(int Cod_Empresa, int Cod_Sucursal, string ApelPat_Prof, int Cod_Isapre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_TraeHorasAgendadas", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_TraeHorasAgendadasAsync(int Cod_Empresa, int Cod_Sucursal, string Lis_IdAmbulatorio, string Lis_RutPaciente, string User);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_MantCargas", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_MantCargasAsync(
                    int Cod_Empresa, 
                    int Cod_Sucursal, 
                    long Id_Grupofamiliar, 
                    long Id_Titular, 
                    long Id_Carga, 
                    long Id_Ambulatorio_Carga, 
                    long Rut_Carga, 
                    string Dv_Carga, 
                    long Cod_Carga, 
                    string Nombre_Carga, 
                    string Apepat_Carga, 
                    string Apemat_Carga, 
                    string FechaNac_Carga, 
                    string Parentesco_Carga, 
                    string Direccion_Carga, 
                    string Sexo_Carga, 
                    string EstadoCivil_Carga, 
                    string Email_Carga, 
                    string Telefono_Carga, 
                    string Celular_Carga, 
                    long IdDistrito_Carga, 
                    long CodComuna_Carga, 
                    long CodProvincia_Carga, 
                    string Ciudad_Carga, 
                    long CodLocalidad_Carga, 
                    int Prevision_Carga, 
                    string Accion, 
                    string IP_Cliente, 
                    string User);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_ObtenerIsapres", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_ObtenerIsapresAsync(int Cod_Empresa, int Cod_Sucursal, string User);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_ObtenerInfoEmpresa", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_ObtenerInfoEmpresaAsync(int Cod_Empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_ObtenerComunas", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_ObtenerComunasAsync(int Cod_Empresa, int Cod_Sucursal, string User, long Cod_Ubigeo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_ObtenerProvincias", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_ObtenerProvinciasAsync(int Cod_Empresa, long Cod_Ubigeo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_ObtenerCodProvinciaCSF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_ObtenerCodProvinciaCSFAsync(int Cod_Empresa, long Cod_Item, long Cod_ItemSuperior);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_ObtenerCodDeptoCSF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_ObtenerCodDeptoCSFAsync(int Cod_Empresa, long Cod_Item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_ObtenerDepto", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_ObtenerDeptoAsync(int Cod_Empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_ObtenerParentescos", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_ObtenerParentescosAsync(int Cod_Empresa, int Cod_Sucursal, string User);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_CambiarClaveWeb", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_CambiarClaveWebAsync(int Cod_Empresa, int Cod_Sucursal, int Id_Paciente, string Pregunta_Clave, string Respuesta_Clave, string Clave_Actual, string Clave_Nueva, string IP_Cliente, string User);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_TraeDatosAcceso", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_TraeDatosAccesoAsync(int Cod_Empresa, long Rut_Paciente, string Dv_Paciente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_ObtienePlan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_ObtienePlanAsync(int Cod_Empresa, int Cod_Sucursal, int Cod_Prevision, string User);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_ObtieneReservasPaciente", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_ObtieneReservasPacienteAsync(int Cod_Empresa, long Id_Ambulatorio, long Id_GrupoFamiliar, string Ver_Visitas);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_ObtenerReservasMedico", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_ObtenerReservasMedicoAsync(int Cod_Empresa, int Cod_Sucursal, int Cod_CentroMedico, int Cod_Medico, long Corr_Agenda, string Fecha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_ObtenerSucursales", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_ObtenerSucursalesAsync(int Cod_Empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_AnulacionHoras", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_AnulacionHorasAsync(int Cod_Empresa, int Cod_Sucursal, int Cod_Unidad, int Cod_Profesional, long Corr_Agenda, int Cod_Especialidad, string Fecha_Reserva, string Hora_Reserva, long mvarIDReserva, long Id_PacienteTitular, string IP_Cliente, string Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_ReservaHora", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_ReservaHoraAsync(
                    int Cod_Empresa, 
                    int Cod_Sucursal, 
                    int Cod_CentroMedico, 
                    int Cod_Especialidad, 
                    int Cod_Unidad, 
                    int Cod_Medico, 
                    int Corr_Agenda, 
                    int Cod_Isapre, 
                    long Box, 
                    bool Multi, 
                    long Id_Paciente_Titular, 
                    long Id_Paciente, 
                    long Corr_Horario, 
                    string Fecha_Reserva, 
                    string Hora_Reserva, 
                    string Mod_Reserva, 
                    string Prox_HoraLibre, 
                    string IP_Cliente, 
                    string Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_EnvioMail", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_EnvioMailAsync(int Cod_Empresa, string Mail_To, string Mail_Bcc, string Mail_Cc, string Mail_Body, string Mail_Subject, string Sistema_Envio, string Responsable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_CreaXmlCalendario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_CreaXmlCalendarioAsync(int intEmpresa, int lngCodSucursal, int lngCodUnidad, long lngCodEspecialidad, long lngCod_Prof, long Corr_Agenda, string Fecha_ProximaHora);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_CreaXmlDetalleDiaCalendario", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_CreaXmlDetalleDiaCalendarioAsync(int Cod_Empresa, int Cod_Sucursal, int Cod_CentMedico, int Cod_Unidad, int Cod_Especialidad, int Cod_Prof, long Corr_Agenda, string Fecha, string Fecha_proxhoradisp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_ValidaPacienteWeb", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_ValidaPacienteWebAsync(int Cod_Empresa, string Rut_Paciente, string DV_Paciente, string Clave_Paciente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_ObtieneConexionCSF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_ObtieneConexionCSFAsync(int Cod_Empresa, string Str_Modulo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_ObtieneFechaServidorCSF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<string> WM_ObtieneFechaServidorCSFAsync(int Cod_Empresa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WM_ObtieneCodCargaCSF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<int> WM_ObtieneCodCargaCSFAsync(int Cod_Empresa, string StrRutTitular);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface ServicioReservaHoraWebSoapChannel : WsReservaWebTisal.ServicioReservaHoraWebSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class ServicioReservaHoraWebSoapClient : System.ServiceModel.ClientBase<WsReservaWebTisal.ServicioReservaHoraWebSoap>, WsReservaWebTisal.ServicioReservaHoraWebSoap
    {
        
        /// <summary>
        /// Implemente este método parcial para configurar el punto de conexión de servicio.
        /// </summary>
        /// <param name="serviceEndpoint">El punto de conexión para configurar</param>
        /// <param name="clientCredentials">Credenciales de cliente</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ServicioReservaHoraWebSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(ServicioReservaHoraWebSoapClient.GetBindingForEndpoint(endpointConfiguration), ServicioReservaHoraWebSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServicioReservaHoraWebSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServicioReservaHoraWebSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServicioReservaHoraWebSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServicioReservaHoraWebSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServicioReservaHoraWebSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> WM_MantUsuarioAsync(
                    long Cod_Empresa, 
                    long Cod_Sucursal, 
                    string Tipo_Usuario, 
                    long Id_Ambulatorio, 
                    long Rut_Paciente, 
                    string Dv_Paciente, 
                    string Nombre_Paciente, 
                    string Apepat_Paciente, 
                    string Apemat_Paciente, 
                    string Fechanac_Paciente, 
                    string Direccion_Paciente, 
                    int Comuna_Paciente, 
                    int Distrito_Paciente, 
                    int Cod_Ciudad, 
                    string Ciudad_Paciente, 
                    int Localidad_Paciente, 
                    string Fono1_Paciente, 
                    string Fono2_Paciente, 
                    string Email_Paciente, 
                    string Sexo_Paciente, 
                    string EstadoCivil_Paciente, 
                    int Prevision_Paciente, 
                    string Clave_Usuario, 
                    string Pregunta_Clave, 
                    string RespuestaClave, 
                    string Estado, 
                    string Accion, 
                    string IP_Cliente, 
                    string Usuario)
        {
            return base.Channel.WM_MantUsuarioAsync(Cod_Empresa, Cod_Sucursal, Tipo_Usuario, Id_Ambulatorio, Rut_Paciente, Dv_Paciente, Nombre_Paciente, Apepat_Paciente, Apemat_Paciente, Fechanac_Paciente, Direccion_Paciente, Comuna_Paciente, Distrito_Paciente, Cod_Ciudad, Ciudad_Paciente, Localidad_Paciente, Fono1_Paciente, Fono2_Paciente, Email_Paciente, Sexo_Paciente, EstadoCivil_Paciente, Prevision_Paciente, Clave_Usuario, Pregunta_Clave, RespuestaClave, Estado, Accion, IP_Cliente, Usuario);
        }
        
        public System.Threading.Tasks.Task<string> WM_BuscaPacXRutAsync(int Cod_Empresa, int Cod_Sucursal, int Rut_Paciente, string Dv_Paciente, string Logeado, string Usuario)
        {
            return base.Channel.WM_BuscaPacXRutAsync(Cod_Empresa, Cod_Sucursal, Rut_Paciente, Dv_Paciente, Logeado, Usuario);
        }
        
        public System.Threading.Tasks.Task<string> WM_BuscaPacienteTitularAsync(int Cod_Empresa, int Cod_Sucursal, long Rut_Paciente, string Dv_Paciente, string Usuario)
        {
            return base.Channel.WM_BuscaPacienteTitularAsync(Cod_Empresa, Cod_Sucursal, Rut_Paciente, Dv_Paciente, Usuario);
        }
        
        public System.Threading.Tasks.Task<string> WM_BuscaCargaPorIDAsync(int Cod_Empresa, long Id_Carga, long Id_GrupoFamiliar)
        {
            return base.Channel.WM_BuscaCargaPorIDAsync(Cod_Empresa, Id_Carga, Id_GrupoFamiliar);
        }
        
        public System.Threading.Tasks.Task<string> WM_ValidaRutEnSistemaAsync(int Cod_Empresa, int Cod_Sucursal, long Rut_Paciente, string Dv_Paciente, string Fecha_NacPac, string TitularCarga)
        {
            return base.Channel.WM_ValidaRutEnSistemaAsync(Cod_Empresa, Cod_Sucursal, Rut_Paciente, Dv_Paciente, Fecha_NacPac, TitularCarga);
        }
        
        public System.Threading.Tasks.Task<string> WM_NormalizacionPacientesAsync(int Cod_Empresa, int Cod_Sucursal, long Rut_Paciente, string Dv_Paciente, string Usuario)
        {
            return base.Channel.WM_NormalizacionPacientesAsync(Cod_Empresa, Cod_Sucursal, Rut_Paciente, Dv_Paciente, Usuario);
        }
        
        public System.Threading.Tasks.Task<string> WM_LogeoPacienteAsync(int Cod_Empresa, int Cod_Sucursal, int Rut_PacienteTitular, string Dv_PacienteTitular, string IP_Cliente, string Clave_Paciente)
        {
            return base.Channel.WM_LogeoPacienteAsync(Cod_Empresa, Cod_Sucursal, Rut_PacienteTitular, Dv_PacienteTitular, IP_Cliente, Clave_Paciente);
        }
        
        public System.Threading.Tasks.Task<string> WM_BuscaCargasAsync(int Cod_Empresa, long Id_GrupoFamiliar)
        {
            return base.Channel.WM_BuscaCargasAsync(Cod_Empresa, Id_GrupoFamiliar);
        }
        
        public System.Threading.Tasks.Task<string> WM_ObtenerEspecialidadesAsync(int Cod_Empresa, int Cod_Sucursal, string Vigencia, string Internet)
        {
            return base.Channel.WM_ObtenerEspecialidadesAsync(Cod_Empresa, Cod_Sucursal, Vigencia, Internet);
        }
        
        public System.Threading.Tasks.Task<string> WM_ObtenerAgendaEspecialidadAsync(int Cod_Empresa, int Cod_Sucursal, int Cod_Especialidad)
        {
            return base.Channel.WM_ObtenerAgendaEspecialidadAsync(Cod_Empresa, Cod_Sucursal, Cod_Especialidad);
        }
        
        public System.Threading.Tasks.Task<string> WM_ObtenerAgendaXApellidoAsync(int Cod_Empresa, int Cod_Sucursal, string ApelPat_prof)
        {
            return base.Channel.WM_ObtenerAgendaXApellidoAsync(Cod_Empresa, Cod_Sucursal, ApelPat_prof);
        }
        
        public System.Threading.Tasks.Task<string> WM_ObtenerAgendaMedicoAsync(int Cod_Empresa, int Cod_Sucursal, string ApelPat_prof, int Cod_Isapre, string Internet, int Cod_Especialidad, long Cod_Profesional, long Rut_Profesional)
        {
            return base.Channel.WM_ObtenerAgendaMedicoAsync(Cod_Empresa, Cod_Sucursal, ApelPat_prof, Cod_Isapre, Internet, Cod_Especialidad, Cod_Profesional, Rut_Profesional);
        }
        
        public System.Threading.Tasks.Task<string> WM_ObtenerAgendaEspecialidadIsapreAsync(int Cod_Empresa, int Cod_Sucursal, int Cod_Especialidad, int Cod_Isapre)
        {
            return base.Channel.WM_ObtenerAgendaEspecialidadIsapreAsync(Cod_Empresa, Cod_Sucursal, Cod_Especialidad, Cod_Isapre);
        }
        
        public System.Threading.Tasks.Task<string> WM_ObtenerAgendaEspecialidad_R_internetAsync(int Cod_Empresa, int Cod_Especialidad_internet, char Vigencia, char Internet)
        {
            return base.Channel.WM_ObtenerAgendaEspecialidad_R_internetAsync(Cod_Empresa, Cod_Especialidad_internet, Vigencia, Internet);
        }
        
        public System.Threading.Tasks.Task<string> WM_ObtenerAgendaMedicoIsapreAsync(int Cod_Empresa, int Cod_Sucursal, string ApelPat_Prof, int Cod_Isapre)
        {
            return base.Channel.WM_ObtenerAgendaMedicoIsapreAsync(Cod_Empresa, Cod_Sucursal, ApelPat_Prof, Cod_Isapre);
        }
        
        public System.Threading.Tasks.Task<string> WM_TraeHorasAgendadasAsync(int Cod_Empresa, int Cod_Sucursal, string Lis_IdAmbulatorio, string Lis_RutPaciente, string User)
        {
            return base.Channel.WM_TraeHorasAgendadasAsync(Cod_Empresa, Cod_Sucursal, Lis_IdAmbulatorio, Lis_RutPaciente, User);
        }
        
        public System.Threading.Tasks.Task<string> WM_MantCargasAsync(
                    int Cod_Empresa, 
                    int Cod_Sucursal, 
                    long Id_Grupofamiliar, 
                    long Id_Titular, 
                    long Id_Carga, 
                    long Id_Ambulatorio_Carga, 
                    long Rut_Carga, 
                    string Dv_Carga, 
                    long Cod_Carga, 
                    string Nombre_Carga, 
                    string Apepat_Carga, 
                    string Apemat_Carga, 
                    string FechaNac_Carga, 
                    string Parentesco_Carga, 
                    string Direccion_Carga, 
                    string Sexo_Carga, 
                    string EstadoCivil_Carga, 
                    string Email_Carga, 
                    string Telefono_Carga, 
                    string Celular_Carga, 
                    long IdDistrito_Carga, 
                    long CodComuna_Carga, 
                    long CodProvincia_Carga, 
                    string Ciudad_Carga, 
                    long CodLocalidad_Carga, 
                    int Prevision_Carga, 
                    string Accion, 
                    string IP_Cliente, 
                    string User)
        {
            return base.Channel.WM_MantCargasAsync(Cod_Empresa, Cod_Sucursal, Id_Grupofamiliar, Id_Titular, Id_Carga, Id_Ambulatorio_Carga, Rut_Carga, Dv_Carga, Cod_Carga, Nombre_Carga, Apepat_Carga, Apemat_Carga, FechaNac_Carga, Parentesco_Carga, Direccion_Carga, Sexo_Carga, EstadoCivil_Carga, Email_Carga, Telefono_Carga, Celular_Carga, IdDistrito_Carga, CodComuna_Carga, CodProvincia_Carga, Ciudad_Carga, CodLocalidad_Carga, Prevision_Carga, Accion, IP_Cliente, User);
        }
        
        public System.Threading.Tasks.Task<string> WM_ObtenerIsapresAsync(int Cod_Empresa, int Cod_Sucursal, string User)
        {
            return base.Channel.WM_ObtenerIsapresAsync(Cod_Empresa, Cod_Sucursal, User);
        }
        
        public System.Threading.Tasks.Task<string> WM_ObtenerInfoEmpresaAsync(int Cod_Empresa)
        {
            return base.Channel.WM_ObtenerInfoEmpresaAsync(Cod_Empresa);
        }
        
        public System.Threading.Tasks.Task<string> WM_ObtenerComunasAsync(int Cod_Empresa, int Cod_Sucursal, string User, long Cod_Ubigeo)
        {
            return base.Channel.WM_ObtenerComunasAsync(Cod_Empresa, Cod_Sucursal, User, Cod_Ubigeo);
        }
        
        public System.Threading.Tasks.Task<string> WM_ObtenerProvinciasAsync(int Cod_Empresa, long Cod_Ubigeo)
        {
            return base.Channel.WM_ObtenerProvinciasAsync(Cod_Empresa, Cod_Ubigeo);
        }
        
        public System.Threading.Tasks.Task<string> WM_ObtenerCodProvinciaCSFAsync(int Cod_Empresa, long Cod_Item, long Cod_ItemSuperior)
        {
            return base.Channel.WM_ObtenerCodProvinciaCSFAsync(Cod_Empresa, Cod_Item, Cod_ItemSuperior);
        }
        
        public System.Threading.Tasks.Task<string> WM_ObtenerCodDeptoCSFAsync(int Cod_Empresa, long Cod_Item)
        {
            return base.Channel.WM_ObtenerCodDeptoCSFAsync(Cod_Empresa, Cod_Item);
        }
        
        public System.Threading.Tasks.Task<string> WM_ObtenerDeptoAsync(int Cod_Empresa)
        {
            return base.Channel.WM_ObtenerDeptoAsync(Cod_Empresa);
        }
        
        public System.Threading.Tasks.Task<string> WM_ObtenerParentescosAsync(int Cod_Empresa, int Cod_Sucursal, string User)
        {
            return base.Channel.WM_ObtenerParentescosAsync(Cod_Empresa, Cod_Sucursal, User);
        }
        
        public System.Threading.Tasks.Task<string> WM_CambiarClaveWebAsync(int Cod_Empresa, int Cod_Sucursal, int Id_Paciente, string Pregunta_Clave, string Respuesta_Clave, string Clave_Actual, string Clave_Nueva, string IP_Cliente, string User)
        {
            return base.Channel.WM_CambiarClaveWebAsync(Cod_Empresa, Cod_Sucursal, Id_Paciente, Pregunta_Clave, Respuesta_Clave, Clave_Actual, Clave_Nueva, IP_Cliente, User);
        }
        
        public System.Threading.Tasks.Task<string> WM_TraeDatosAccesoAsync(int Cod_Empresa, long Rut_Paciente, string Dv_Paciente)
        {
            return base.Channel.WM_TraeDatosAccesoAsync(Cod_Empresa, Rut_Paciente, Dv_Paciente);
        }
        
        public System.Threading.Tasks.Task<string> WM_ObtienePlanAsync(int Cod_Empresa, int Cod_Sucursal, int Cod_Prevision, string User)
        {
            return base.Channel.WM_ObtienePlanAsync(Cod_Empresa, Cod_Sucursal, Cod_Prevision, User);
        }
        
        public System.Threading.Tasks.Task<string> WM_ObtieneReservasPacienteAsync(int Cod_Empresa, long Id_Ambulatorio, long Id_GrupoFamiliar, string Ver_Visitas)
        {
            return base.Channel.WM_ObtieneReservasPacienteAsync(Cod_Empresa, Id_Ambulatorio, Id_GrupoFamiliar, Ver_Visitas);
        }
        
        public System.Threading.Tasks.Task<string> WM_ObtenerReservasMedicoAsync(int Cod_Empresa, int Cod_Sucursal, int Cod_CentroMedico, int Cod_Medico, long Corr_Agenda, string Fecha)
        {
            return base.Channel.WM_ObtenerReservasMedicoAsync(Cod_Empresa, Cod_Sucursal, Cod_CentroMedico, Cod_Medico, Corr_Agenda, Fecha);
        }
        
        public System.Threading.Tasks.Task<string> WM_ObtenerSucursalesAsync(int Cod_Empresa)
        {
            return base.Channel.WM_ObtenerSucursalesAsync(Cod_Empresa);
        }
        
        public System.Threading.Tasks.Task<string> WM_AnulacionHorasAsync(int Cod_Empresa, int Cod_Sucursal, int Cod_Unidad, int Cod_Profesional, long Corr_Agenda, int Cod_Especialidad, string Fecha_Reserva, string Hora_Reserva, long mvarIDReserva, long Id_PacienteTitular, string IP_Cliente, string Usuario)
        {
            return base.Channel.WM_AnulacionHorasAsync(Cod_Empresa, Cod_Sucursal, Cod_Unidad, Cod_Profesional, Corr_Agenda, Cod_Especialidad, Fecha_Reserva, Hora_Reserva, mvarIDReserva, Id_PacienteTitular, IP_Cliente, Usuario);
        }
        
        public System.Threading.Tasks.Task<string> WM_ReservaHoraAsync(
                    int Cod_Empresa, 
                    int Cod_Sucursal, 
                    int Cod_CentroMedico, 
                    int Cod_Especialidad, 
                    int Cod_Unidad, 
                    int Cod_Medico, 
                    int Corr_Agenda, 
                    int Cod_Isapre, 
                    long Box, 
                    bool Multi, 
                    long Id_Paciente_Titular, 
                    long Id_Paciente, 
                    long Corr_Horario, 
                    string Fecha_Reserva, 
                    string Hora_Reserva, 
                    string Mod_Reserva, 
                    string Prox_HoraLibre, 
                    string IP_Cliente, 
                    string Usuario)
        {
            return base.Channel.WM_ReservaHoraAsync(Cod_Empresa, Cod_Sucursal, Cod_CentroMedico, Cod_Especialidad, Cod_Unidad, Cod_Medico, Corr_Agenda, Cod_Isapre, Box, Multi, Id_Paciente_Titular, Id_Paciente, Corr_Horario, Fecha_Reserva, Hora_Reserva, Mod_Reserva, Prox_HoraLibre, IP_Cliente, Usuario);
        }
        
        public System.Threading.Tasks.Task<string> WM_EnvioMailAsync(int Cod_Empresa, string Mail_To, string Mail_Bcc, string Mail_Cc, string Mail_Body, string Mail_Subject, string Sistema_Envio, string Responsable)
        {
            return base.Channel.WM_EnvioMailAsync(Cod_Empresa, Mail_To, Mail_Bcc, Mail_Cc, Mail_Body, Mail_Subject, Sistema_Envio, Responsable);
        }
        
        public System.Threading.Tasks.Task<string> WM_CreaXmlCalendarioAsync(int intEmpresa, int lngCodSucursal, int lngCodUnidad, long lngCodEspecialidad, long lngCod_Prof, long Corr_Agenda, string Fecha_ProximaHora)
        {
            return base.Channel.WM_CreaXmlCalendarioAsync(intEmpresa, lngCodSucursal, lngCodUnidad, lngCodEspecialidad, lngCod_Prof, Corr_Agenda, Fecha_ProximaHora);
        }
        
        public System.Threading.Tasks.Task<string> WM_CreaXmlDetalleDiaCalendarioAsync(int Cod_Empresa, int Cod_Sucursal, int Cod_CentMedico, int Cod_Unidad, int Cod_Especialidad, int Cod_Prof, long Corr_Agenda, string Fecha, string Fecha_proxhoradisp)
        {
            return base.Channel.WM_CreaXmlDetalleDiaCalendarioAsync(Cod_Empresa, Cod_Sucursal, Cod_CentMedico, Cod_Unidad, Cod_Especialidad, Cod_Prof, Corr_Agenda, Fecha, Fecha_proxhoradisp);
        }
        
        public System.Threading.Tasks.Task<string> WM_ValidaPacienteWebAsync(int Cod_Empresa, string Rut_Paciente, string DV_Paciente, string Clave_Paciente)
        {
            return base.Channel.WM_ValidaPacienteWebAsync(Cod_Empresa, Rut_Paciente, DV_Paciente, Clave_Paciente);
        }
        
        public System.Threading.Tasks.Task<string> WM_ObtieneConexionCSFAsync(int Cod_Empresa, string Str_Modulo)
        {
            return base.Channel.WM_ObtieneConexionCSFAsync(Cod_Empresa, Str_Modulo);
        }
        
        public System.Threading.Tasks.Task<string> WM_ObtieneFechaServidorCSFAsync(int Cod_Empresa)
        {
            return base.Channel.WM_ObtieneFechaServidorCSFAsync(Cod_Empresa);
        }
        
        public System.Threading.Tasks.Task<int> WM_ObtieneCodCargaCSFAsync(int Cod_Empresa, string StrRutTitular)
        {
            return base.Channel.WM_ObtieneCodCargaCSFAsync(Cod_Empresa, StrRutTitular);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ServicioReservaHoraWebSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.ServicioReservaHoraWebSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ServicioReservaHoraWebSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://192.168.40.21/WsReserva/ResHoraWeb.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.ServicioReservaHoraWebSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://192.168.40.21/WsReserva/ResHoraWeb.asmx");
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            ServicioReservaHoraWebSoap,
            
            ServicioReservaHoraWebSoap12,
        }
    }
}